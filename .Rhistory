activity_labels <- read.table("UCI HAR Dataset/activity_labels.txt")
subject_test <- read.table("UCI HAR Dataset/test/subject_test.txt")
test <- read.table("UCI HAR Dataset/test/X_test.txt")
y_test <- read.table("UCI HAR Dataset/test/y_test.txt")
names(test) <- as.character(features$V2)
test$activity <- y_test$V1
test$subject <- y_test$V1
subject_train <- read.table("UCI HAR Dataset/train/subject_train.txt")
train <- read.table("UCI HAR Dataset/train/X_train.txt")
y_train <- read.table("UCI HAR Dataset/train/y_train.txt")
names(train) <- as.character(features$V2)
test$activity <- y_train$V1
test$activity <- y_test$V1
test$subject <- y_test$V1
activity_labels
head(data_simplified_test,1)
data_simplified_test$activitynames <- activity_labels$V2[data_simplified_test$activity]
head(dataset.filtered,1))
head(dataset.filtered,1)
dataset <- rbind(test, train)
features <- read.table("UCI HAR Dataset/features.txt")
activity_labels <- read.table("UCI HAR Dataset/activity_labels.txt")
subject_test <- read.table("UCI HAR Dataset/test/subject_test.txt")
test <- read.table("UCI HAR Dataset/test/X_test.txt")
y_test <- read.table("UCI HAR Dataset/test/y_test.txt")
names(test) <- as.character(features$V2)
test$activity <- y_test$V1
test$subject <- factor(subject_test$V1)
subject_train <- read.table("UCI HAR Dataset/train/subject_train.txt")
train <- read.table("UCI HAR Dataset/train/X_train.txt")
y_train <- read.table("UCI HAR Dataset/train/y_train.txt")
names(train) <- as.character(features$V2)
train$activity <- y_train$V1
train$subject <- factor(subject_train$V1)
dataset <- rbind(test, train)
column.names <- colnames(dataset)
column.names.filtered <- grep("std\\(\\)|mean\\(\\)|activity|subject", column.names, value=TRUE)
dataset.filtered <- dataset[, column.names.filtered]
dataset.filtered$activitylabel <- factor(dataset.filtered$activity, labels= c("WALKING", "WALKING_UPSTAIRS", "WALKING_DOWNSTAIRS", "SITTING", "STANDING", "LAYING"))
dataset.filtered <- dataset[, column.names.filtered]
head(dataset.filtered, 1)
dataset.filtered$activitylabel <- activity_labels$V2[dataset.filtered$activity]
features.colnames = grep("std\\(\\)|mean\\(\\)", column.names, value=TRUE)
features.colnames
column.names <- colnames(dataset)
column.names
column.names.filtered <- grep("std\\(\\)|mean\\(\\)|activity|subject", column.names, value=TRUE)
column.names.filtered
column.names.filtered <- grep("std\\(\\)|mean\\(\\)|activity|subject", column.names)
column.names.filtered
column.names.filtered <- grep("std\\(\\)|mean\\(\\)|activity|subject", column.names, value=TRUE)
dataset.filtered <- dataset[, column.names.filtered]
dataset.filtered
aux <- apply(as.array(names(dataset.filtered)), 1, function(x) x <- gsub('-|\\(|\\)','', x))
aux<- apply(as.array(aux), 1, function(x) x <- gsub('t','time', x))
aux<- apply(as.array(aux), 1, function(x) x <- gsub('f','freq', x))
aux
names(dataset.filtered) <- as.character(aux)
dataset.filtered
head(dataset.filtered,1)
aux
dataset.filtered$activitylabel <- activity_labels$V2[dataset.filtered$activity]
dataset.filtered <- dataset[, column.names.filtered]
dataset.filtered$activitylabel <- activity_labels$V2[dataset.filtered$activity]
names(dataset.filtered)
aux[-6]
aux[-60]
aux[-69]
aux
aux<- apply(as.array(aux[-69]), 1, function(x) x <- gsub('t','time', x))
aux<- apply(as.array(aux), 1, function(x) x <- gsub('f','freq', x))
names(dataset.filtered) <- as.character(aux)
names(dataset.filtered)
dataset.filtered <- dataset[, column.names.filtered]
dataset.filtered$activitylabel <- activity_labels$V2[dataset.filtered$activity]
aux <- apply(as.array(names(dataset.filtered)), 1, function(x) x <- gsub('-|\\(|\\)','', x))
aux<- apply(as.array(aux[-69]), 1, function(x) x <- gsub('t','time', x))
aux<- apply(as.array(aux), 1, function(x) x <- gsub('f','freq', x))
aux
dataset.filtered$activitylabel <- activity_labels$V2[dataset.filtered$activity]
names(dataset.filtered)
aux <- apply(as.array(names(dataset.filtered)), 1, function(x) x <- gsub('-|\\(|\\)','', x))
aux
aux<- apply(as.array(aux[-69]), 1, function(x) x <- gsub('t','time', x))
aux
aux <- apply(as.array(names(dataset.filtered)), 1, function(x) x <- gsub('-|\\(|\\)','', x))
aux<- apply(as.array(aux), 1, function(x) x <- gsub('t','time', x))
aux<- apply(as.array(aux), 1, function(x) x <- gsub('f','freq', x))
features.colnames = grep("std\\(\\)|mean\\(\\)", column.names, value=TRUE)
features.colnames
dataset.melt <-melt(dataset.filtered, id = c('activitylabel', 'subject'), measure.vars = features.colnames)
?melt
??melt
library(plyr)
# Step 1
# Merge the training and test sets to create one data set
###############################################################################
x_train <- read.table("train/X_train.txt")
y_train <- read.table("train/y_train.txt")
subject_train <- read.table("train/subject_train.txt")
x_test <- read.table("test/X_test.txt")
y_test <- read.table("test/y_test.txt")
subject_test <- read.table("test/subject_test.txt")
# create 'x' data set
x_data <- rbind(x_train, x_test)
# create 'y' data set
y_data <- rbind(y_train, y_test)
# create 'subject' data set
subject_data <- rbind(subject_train, subject_test)
# Step 2
# Extract only the measurements on the mean and standard deviation for each measurement
###############################################################################
features <- read.table("features.txt")
# get only columns with mean() or std() in their names
mean_and_std_features <- grep("-(mean|std)\\(\\)", features[, 2])
# subset the desired columns
x_data <- x_data[, mean_and_std_features]
# correct the column names
names(x_data) <- features[mean_and_std_features, 2]
# Step 3
# Use descriptive activity names to name the activities in the data set
###############################################################################
activities <- read.table("activity_labels.txt")
# update values with correct activity names
y_data[, 1] <- activities[y_data[, 1], 2]
# correct column name
names(y_data) <- "activity"
# Step 4
# Appropriately label the data set with descriptive variable names
###############################################################################
# correct column name
names(subject_data) <- "subject"
# bind all the data in a single data set
all_data <- cbind(x_data, y_data, subject_data)
y_train <- read.table("train/y_train.txt")
library(plyr)
setwd("~/Documents/estudos/coursera/Getting_Cleaning_Data_Course_Project/UCI HAR Dataset")
x_train <- read.table("train/X_train.txt")
library(plyr)
# Step 1
# Merge the training and test sets to create one data set
###############################################################################
x_train <- read.table("train/X_train.txt")
y_train <- read.table("train/y_train.txt")
subject_train <- read.table("train/subject_train.txt")
x_test <- read.table("test/X_test.txt")
y_test <- read.table("test/y_test.txt")
subject_test <- read.table("test/subject_test.txt")
# create 'x' data set
x_data <- rbind(x_train, x_test)
# create 'y' data set
y_data <- rbind(y_train, y_test)
# create 'subject' data set
subject_data <- rbind(subject_train, subject_test)
# Step 2
# Extract only the measurements on the mean and standard deviation for each measurement
###############################################################################
features <- read.table("features.txt")
# get only columns with mean() or std() in their names
mean_and_std_features <- grep("-(mean|std)\\(\\)", features[, 2])
# subset the desired columns
x_data <- x_data[, mean_and_std_features]
# correct the column names
names(x_data) <- features[mean_and_std_features, 2]
# Step 3
# Use descriptive activity names to name the activities in the data set
###############################################################################
activities <- read.table("activity_labels.txt")
# update values with correct activity names
y_data[, 1] <- activities[y_data[, 1], 2]
# correct column name
names(y_data) <- "activity"
# Step 4
# Appropriately label the data set with descriptive variable names
###############################################################################
# correct column name
names(subject_data) <- "subject"
# bind all the data in a single data set
all_data <- cbind(x_data, y_data, subject_data)
names(all_data)
names(all_data) == names(dataset.filtered)
length(all_data)
length(dataset.filtered)
dataset.filtered
names(dataset.filtered)
head(dataset.filtered$activity, 1)
head(dataset.filtered$activitylabel, 1)
all_data$activity
names(all_data)
names(all_data[1:66]) == names(dataset.filtered[1:66])
names(all_data[66:68])
names(all_data[66:69])
names(all_data[66:68])
names(dataset.filtered[66:68])
names(dataset.filtered[66:69])
names(dataset.filtered[1:66])
names(dataset.filtered[1:67])
averages_data <- ddply(dataset.filtered, .(subject, activity), function(x) colMeans(x[, 1:66]))
write.table(averages_data, "averages_data.txt", row.name=FALSE)
?ddply
averages_data <- ddply(dataset.filtered, .(subject, activitylabel), function(x) colMeans(x[, 1:66]))
write.table(averages_data, "averages_data.txt", row.name=FALSE)
subject_test <- read.table("UCI HAR Dataset/test/subject_test.txt")
X_test <- read.table("UCI HAR Dataset/test/X_test.txt")
y_test <- read.table("UCI HAR Dataset/test/y_test.txt")
setwd("../")
features <- read.table("UCI HAR Dataset/features.txt")
activity_labels <- read.table("UCI HAR Dataset/activity_labels.txt")
subject_test <- read.table("UCI HAR Dataset/test/subject_test.txt")
X_test <- read.table("UCI HAR Dataset/test/X_test.txt")
y_test <- read.table("UCI HAR Dataset/test/y_test.txt")
subject_train <- read.table("UCI HAR Dataset/train/subject_train.txt")
X_train <- read.table("UCI HAR Dataset/train/X_train.txt")
y_train <- read.table("UCI HAR Dataset/train/y_train.txt")
names(X_test) <- as.character(features$V2)
X_test$activity <- y_test$V1
X_test$subject <- factor(subject_test$V1)
names(X_train) <- as.character(features$V2)
X_X_train$activity <- y_train$V1
train$subject <- factor(subject_train$V1)
X_train$activity <- y_train$V1
train$subject <- factor(subject_train$V1)
data <- rbind(X_test, X_train)
library(dplyr)
# Step 0 => loading data and completing X_test and X_train
#reading features and activity data
features <- read.table("UCI HAR Dataset/features.txt")
activity_labels <- read.table("UCI HAR Dataset/activity_labels.txt")
# reading test data
subject_test <- read.table("UCI HAR Dataset/test/subject_test.txt")
X_test <- read.table("UCI HAR Dataset/test/X_test.txt")
y_test <- read.table("UCI HAR Dataset/test/y_test.txt")
# reading train data
subject_train <- read.table("UCI HAR Dataset/train/subject_train.txt")
X_train <- read.table("UCI HAR Dataset/train/X_train.txt")
y_train <- read.table("UCI HAR Dataset/train/y_train.txt")
# adding columns names from features and data from y_test and subject_test to X_test
names(X_test) <- as.character(features$V2)
X_test$activity <- y_test$V1
X_test$subject <- factor(subject_test$V1)
# adding columns names from features and data from y_test and subject_test to X_train
names(X_train) <- as.character(features$V2)
X_train$activity <- y_train$V1
train$subject <- factor(subject_train$V1)
data <- rbind(X_test, X_train)
library(dplyr)
#reading features and activity data
features <- read.table("UCI HAR Dataset/features.txt")
activity_labels <- read.table("UCI HAR Dataset/activity_labels.txt")
#reading test data
subject_test <- read.table("UCI HAR Dataset/test/subject_test.txt")
test <- read.table("UCI HAR Dataset/test/X_test.txt")
y_test <- read.table("UCI HAR Dataset/test/y_test.txt")
#reading train data
subject_train <- read.table("UCI HAR Dataset/train/subject_train.txt")
train <- read.table("UCI HAR Dataset/train/X_train.txt")
y_train <- read.table("UCI HAR Dataset/train/y_train.txt")
#combining test
names(test) <- as.character(features$V2)
test$activity <- y_test$V1
test$subject <- factor(subject_test$V1)
names(train) <- as.character(features$V2)
train$activity <- y_train$V1
train$subject <- factor(subject_train$V1)
#merge train and test sets (STEP 1)
dataset <- rbind(test, train)
subject_test <- read.table("UCI HAR Dataset/test/subject_test.txt")
X_test <- read.table("UCI HAR Dataset/test/X_test.txt")
y_test <- read.table("UCI HAR Dataset/test/y_test.txt")
subject_train <- read.table("UCI HAR Dataset/train/subject_train.txt")
X_train <- read.table("UCI HAR Dataset/train/X_train.txt")
y_train <- read.table("UCI HAR Dataset/train/y_train.txt")
names(X_test) <- as.character(features$V2)
X_test$activity <- y_test$V1
X_test$subject <- factor(subject_test$V1)
names(X_train) <- as.character(features$V2)
X_train$activity <- y_train$V1
train$subject <- factor(subject_train$V1)
data <- rbind(X_test, X_train)
data <- rbind(test, train)
test <- read.table("UCI HAR Dataset/test/X_test.txt")
y_test <- read.table("UCI HAR Dataset/test/y_test.txt")
subject_train <- read.table("UCI HAR Dataset/train/subject_train.txt")
X_train <- read.table("UCI HAR Dataset/train/X_train.txt")
y_train <- read.table("UCI HAR Dataset/train/y_train.txt")
names(test) <- as.character(features$V2)
test$activity <- y_test$V1
test$subject <- factor(subject_test$V1)
names(train) <- as.character(features$V2)
train$activity <- y_train$V1
train$subject <- factor(subject_train$V1)
data <- rbind(test, train)
library(dplyr)
# Step 0 => loading data and completing X_test and X_train
#reading features and activity data
features <- read.table("UCI HAR Dataset/features.txt")
activity_labels <- read.table("UCI HAR Dataset/activity_labels.txt")
# reading test data
subject_test <- read.table("UCI HAR Dataset/test/subject_test.txt")
X_test <- read.table("UCI HAR Dataset/test/X_test.txt")
y_test <- read.table("UCI HAR Dataset/test/y_test.txt")
# reading train data
subject_train <- read.table("UCI HAR Dataset/train/subject_train.txt")
X_train <- read.table("UCI HAR Dataset/train/X_train.txt")
y_train <- read.table("UCI HAR Dataset/train/y_train.txt")
# adding columns names from features and data from y_test and subject_test to X_test
names(X_test) <- as.character(features$V2)
X_test$activity <- y_test$V1
X_test$subject <- factor(subject_test$V1)
library(dplyr)
#reading features and activity data
features <- read.table("UCI HAR Dataset/features.txt")
activity_labels <- read.table("UCI HAR Dataset/activity_labels.txt")
#reading test data
subject_test <- read.table("UCI HAR Dataset/test/subject_test.txt")
test <- read.table("UCI HAR Dataset/test/X_test.txt")
y_test <- read.table("UCI HAR Dataset/test/y_test.txt")
#reading train data
subject_train <- read.table("UCI HAR Dataset/train/subject_train.txt")
train <- read.table("UCI HAR Dataset/train/X_train.txt")
y_train <- read.table("UCI HAR Dataset/train/y_train.txt")
#combining test
names(test) <- as.character(features$V2)
test$activity <- y_test$V1
test$subject <- factor(subject_test$V1)
names(train) <- as.character(features$V2)
train$activity <- y_train$V1
train$subject <- factor(subject_train$V1)
X_test == test
sum(X_test == test)
norw(test)
nrow(test)
norw(X_test)
nrow(X_test)
nrow(X_train)
data <- rbind(X_test, X_train)
names(X_train) <- as.character(features$V2)
X_train$activity <- y_train$V1
X_train$subject <- factor(subject_train$V1)
data <- rbind(X_test, X_train)
library(dplyr)
# Step 0 => loading data and completing X_test and X_train
#reading features and activity data
features <- read.table("UCI HAR Dataset/features.txt")
activity_labels <- read.table("UCI HAR Dataset/activity_labels.txt")
# reading test data
subject_test <- read.table("UCI HAR Dataset/test/subject_test.txt")
X_test <- read.table("UCI HAR Dataset/test/X_test.txt")
y_test <- read.table("UCI HAR Dataset/test/y_test.txt")
# reading train data
subject_train <- read.table("UCI HAR Dataset/train/subject_train.txt")
X_train <- read.table("UCI HAR Dataset/train/X_train.txt")
y_train <- read.table("UCI HAR Dataset/train/y_train.txt")
# adding columns names from features and data from y_test and subject_test to X_test
names(X_test) <- as.character(features$V2)
X_test$activity <- y_test$V1
X_test$subject <- factor(subject_test$V1)
# adding columns names from features and data from y_test and subject_test to X_train
names(X_train) <- as.character(features$V2)
X_train$activity <- y_train$V1
X_train$subject <- factor(subject_train$V1)
# Step 1 => Merges the training and the test sets to create one data set.
data <- rbind(X_test, X_train)
names <- colnames(data)
data.cleaned <- grep("std\\(\\)|mean\\(\\)|activity|subject", names, value=TRUE)
data.cleaned <- dataset[, column.names.filtered]
data.cleaned$activity <- activity_labels$V2[data.cleaned$activity]
aux <- apply(as.array(names(data.cleaned)), 1, function(x) x <- gsub('-|\\(|\\)','', x))
aux
names(dataset.filtered[1:66])
aux <- apply(as.array(names(data.cleaned[1:6])), 1, function(x) x <- gsub('-|\\(|\\)','', x))
aux<- apply(as.array(aux), 1, function(x) x <- gsub('t','time', x))
aux<- apply(as.array(aux), 1, function(x) x <- gsub('f','freq', x))
names(dataset.filtered[1:66]) <- as.character(aux)
names(dataset.filtered)
aux <- apply(as.array(names(data.cleaned[1:6])), 1, function(x) x <- gsub('-|\\(|\\)','', x))
aux<- apply(as.array(aux), 1, function(x) x <- gsub('t','time', x))
aux<- apply(as.array(aux), 1, function(x) x <- gsub('f','freq', x))
names(data.cleaned[1:66]) <- as.character(aux)
names(data.cleaned[1:66])
aux
aux <- apply(as.array(names(data.cleaned[1:66])), 1, function(x) x <- gsub('-|\\(|\\)','', x))
aux<- apply(as.array(aux), 1, function(x) x <- gsub('t','time', x))
aux<- apply(as.array(aux), 1, function(x) x <- gsub('f','freq', x))
names(data.cleaned[1:66]) <- as.character(aux)
names(data.cleaned)
as.character(aux)
names(data.cleaned[1:66]) <- as.character(aux)
names(data.cleaned[67])
names(data.cleaned) <- as.character(aux, names(data.cleaned[67]), names(data.cleaned[67]))
names(data.cleaned)
data.cleaned <- grep("std\\(\\)|mean\\(\\)|activity|subject", names, value=TRUE)
data.cleaned <- dataset[, column.names.filtered]
data.cleaned$activity <- activity_labels$V2[data.cleaned$activity]
aux <- apply(as.array(names(data.cleaned[1:66])), 1, function(x) x <- gsub('-|\\(|\\)','', x))
aux<- apply(as.array(aux), 1, function(x) x <- gsub('t','time', x))
aux<- apply(as.array(aux), 1, function(x) x <- gsub('f','freq', x))
names(data.cleaned) <- as.character(aux, names(data.cleaned[67]), names(data.cleaned[67]))
names(data.cleaned)
names(data.cleaned) <- c(as.character(aux), names(data.cleaned[67]), names(data.cleaned[67]))
data.cleaned <- grep("std\\(\\)|mean\\(\\)|activity|subject", names, value=TRUE)
data.cleaned <- dataset[, column.names.filtered]
data.cleaned$activity <- activity_labels$V2[data.cleaned$activity]
names(data.cleaned[67])
names(data.cleaned[68])
names(data.cleaned) <- c(as.character(aux), names(data.cleaned[67]), names(data.cleaned[68]))
names(data.cleaned)
?ddply
averages_data <- ddply(data.cleaned, .(subject, activity), function(x) colMeans(x[, 1:66]))
write.table(averages_data, "averages_data.txt", row.name=FALSE)
aux <- apply(as.array(names(data.cleaned[1:66])), 1, function(x) x <- gsub('-|\\(|\\)','.', x))
aux<- apply(as.array(aux), 1, function(x) x <- gsub('t','time.', x))
aux<- apply(as.array(aux), 1, function(x) x <- gsub('f','freq/', x))
names(data.cleaned) <- c(as.character(aux), names(data.cleaned[67]), names(data.cleaned[68]))
names(data.cleaned)
aux <- apply(as.array(names(data.cleaned[1:66])), 1, function(x) x <- gsub('-|\\(|\\)','.', x))
aux<- apply(as.array(aux), 1, function(x) x <- gsub('t','time.', x))
aux<- apply(as.array(aux), 1, function(x) x <- gsub('f','freq.', x))
names(data.cleaned) <- c(as.character(aux), names(data.cleaned[67]), names(data.cleaned[68]))
names(data.cleaned)
data.cleaned <- grep("std\\(\\)|mean\\(\\)|activity|subject", names, value=TRUE)
data.cleaned <- dataset[, column.names.filtered]
data.cleaned$activity <- activity_labels$V2[data.cleaned$activity]
aux <- apply(as.array(names(data.cleaned[1:66])), 1, function(x) x <- gsub('-|\\(|\\)','.', x))
aux<- apply(as.array(aux), 1, function(x) x <- gsub('t','time.', x))
aux<- apply(as.array(aux), 1, function(x) x <- gsub('f','freq.', x))
names(data.cleaned) <- c(as.character(aux), names(data.cleaned[67]), names(data.cleaned[68]))
names(data.cleaned)
data.cleaned <- grep("std\\(\\)|mean\\(\\)|activity|subject", names, value=TRUE)
data.cleaned <- dataset[, column.names.filtered]
data.cleaned$activity <- activity_labels$V2[data.cleaned$activity]
aux <- apply(as.array(names(data.cleaned[1:66])), 1, function(x) x <- gsub('-|\\(|\\)','', x))
aux<- apply(as.array(aux), 1, function(x) x <- gsub('t','time.', x))
aux<- apply(as.array(aux), 1, function(x) x <- gsub('f','freq.', x))
names(data.cleaned) <- c(as.character(aux), names(data.cleaned[67]), names(data.cleaned[68]))
names(data.cleaned)
data.cleaned <- grep("std\\(\\)|mean\\(\\)|activity|subject", names, value=TRUE)
data.cleaned <- dataset[, column.names.filtered]
names(data.cleaned[58])
aux <- apply(as.array(names(data.cleaned[1:66])), 1, function(x) x <- gsub('-|\\(|\\)','.', x))
aux
data.cleaned <- grep("std\\(\\)|mean\\(\\)|activity|subject", names, value=TRUE)
data.cleaned <- dataset[, column.names.filtered]
data.cleaned$activity <- activity_labels$V2[data.cleaned$activity]
aux <- apply(as.array(names(data.cleaned[1:66])), 1, function(x) x <- gsub('-|\\(|\\)','.', x))
aux
names <- colnames(data)
data.cleaned <- grep("std\\(\\)|mean\\(\\)|activity|subject", names, value=TRUE)
data.cleaned <- dataset[, column.names.filtered]
data.cleaned$activity <- activity_labels$V2[data.cleaned$activity]
data.cleaned
names(data.cleaned)
aux <- apply(as.array(names(data.cleaned[1:66])), 1, function(x) x <- gsub('-|\\(|\\)','.', x))
aux
aux <- apply(as.array(names(data.cleaned[1:66])), 1, function(x) x <- gsub('-|\\(|\\)','', x))
aux
aux<- apply(as.array(names(data.cleaned[1:66])), 1, function(x) x <- gsub('t[a-zA-Z]','time.', x))
aux
aux <- apply(as.array(names(data.cleaned[1:66])), 1, function(x) x <- gsub('-|\\(|\\)','', x))
names(data.cleaned) <- c(as.character(aux), names(data.cleaned[67]), names(data.cleaned[68]))
names(data.cleaned)
aux <- apply(as.array(names(data.cleaned[1:66])), 1, function(x) x <- gsub('-|\\(|\\)','.', x))
names(data.cleaned) <- c(as.character(aux), names(data.cleaned[67]), names(data.cleaned[68]))
names(data.cleaned)
aux <- apply(as.array(names(data.cleaned[1:66])), 1, function(x) x <- gsub('-|\\(|\\)','.', x))
aux
data.cleaned <- grep("std\\(\\)|mean\\(\\)|activity|subject", names, value=TRUE)
data.cleaned <- dataset[, column.names.filtered]
data.cleaned$activity <- activity_labels$V2[data.cleaned$activity]
aux <- apply(as.array(names(data.cleaned[1:66])), 1, function(x) x <- gsub('-|\\(|\\)','.', x))
aux
aux<- apply(as.array(aux), 1, function(x) x <- sub('t','time.', x))
aux <- apply(as.array(names(data.cleaned[1:66])), 1, function(x) x <- gsub('-|\\(|\\)','', x))
aux<- apply(as.array(aux), 1, function(x) x <- sub('t','time.', x))
aux
aux<- apply(as.array(names(data.cleaned[1:66])), 1, function(x) x <- sub('t','time.', x))
aux
aux<- apply(as.array(names(data.cleaned[1:66])), 1, function(x) x <- sub('^t','time.', x))
aux
aux<- apply(as.array(aux), 1, function(x) x <- gsub('^f','freq.', x))
aux
aux <- apply(as.array(names(data.cleaned[1:66])), 1, function(x) x <- gsub('-|\\(|\\)-','.', x))
aux
aux <- apply(as.array(names(data.cleaned[1:66])), 1, function(x) x <- gsub('-|\\(|\\)\\-','.', x))
aux
aux <- apply(as.array(names(data.cleaned[1:66])), 1, function(x) x <- gsub('-|[\\(\\)\\-]','.', x))
aux
data.cleaned <- grep("std\\(\\)|mean\\(\\)|activity|subject", names, value=TRUE)
data.cleaned <- dataset[, column.names.filtered]
data.cleaned$activity <- activity_labels$V2[data.cleaned$activity]
aux <- apply(as.array(names(data.cleaned[1:66])), 1, function(x) x <- gsub('-|[\\(\\)\\-]','.', x))
aux
aux <- apply(as.array(names(data.cleaned[1:66])), 1, function(x) x <- gsub('[\\(\\)\\-]','.', x))
aux
aux <- apply(as.array(names(data.cleaned[1:66])), 1, function(x) x <- gsub('-|(\\(\\)\\-)','.', x))
aux
aux <- apply(as.array(names(data.cleaned[1:66])), 1, function(x) x <- gsub('-|(\\(\\)-)','.', x))
aux
aux <- apply(as.array(names(data.cleaned[1:66])), 1, function(x) x <- gsub('-|(\\(\\))','.', x))
aux
aux<- apply(as.array(aux), 1, function(x) x <- sub('^t','time.', x))
aux<- apply(as.array(aux), 1, function(x) x <- gsub('^f','freq.', x))
names(data.cleaned) <- c(as.character(aux), names(data.cleaned[67]), names(data.cleaned[68]))
names(data.cleaned)
write.table(output.data, "averages_data.txt", row.name=FALSE)
output.data <- ddply(data.cleaned, .(subject, activity), function(x) colMeans(x[, 1:66]))
write.table(output.data, "averages_data.txt", row.name=FALSE)
tidy_data <- ddply(data.cleaned, .(subject, activity), function(x) colMeans(x[, 1:66]))
write.table(tidy_data, "tidy_data.txt", row.name=FALSE)
list.files()
write.table(tidy_data, "UCI HAR Datasettidy_data.txt", row.name=FALSE)
write.table(tidy_data, "UCI HAR Dataset/tidy_data.txt", row.name=FALSE)
